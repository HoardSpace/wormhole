{"version":3,"sources":["webpack:///dist.js","webpack:///webpack/bootstrap 26a9bb1c8b56408a90aa","webpack:///./js/src/main.js","webpack:///./js/src/wormholespace.js","webpack:///./js/src/mathutil.js","webpack:///./js/src/player.js","webpack:///./js/src/playercontrols.js","webpack:///./js/src/renderer.js","webpack:///./js/src/scenerenderer.js","webpack:///./js/src/scaledrenderer.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","animate","requestAnimationFrame","delta","clock","getDelta","playerControls","update","maxX","wormholeSpace","throatLength","radius","player","position","x","render","renderer","resizeRenderer","resize","toggleUI","uiToggle","checked","document","body","classList","add","remove","removeIntroduction","event","target","href","querySelector","removeEventListener","WormholeSpace","Player","PlayerControls","Renderer","container","playerX","set","Math","PI","rotateY","THREE","Clock","window","addEventListener","this","radiusSquared","MathUtil","prototype","adjustCartesianDirection","direction","distanceToWormhole","max","abs","r","sqrt","y","z","sin","adjustSphericalDirection","step","deltaPosition","Vector3","deltaDirection","deltaTetrad","f","Dfv","Matrix3","Dfx","g","Dgv","Dgx","Dgt","deltaT1","deltaT2","lhs","lhsInverse","object","distanceToWormhole0","dx","dy","dz","x2","dy2","dz2","siny","cosy","cos","sin2y","cos2y","siny2","cosysiny","coty","tan","cscy","b2","ib2r2","ib2r22","identity","subtract","multiplyScalar","getInverse","copy","addScaledVector","clone","applyMatrix3","__tetrad","i","tetrad","tx","ty","tz","quaternionToTetrad","rotationMatrix","Matrix4","quaternion","makeRotationFromQuaternion","elements","tetradToQuaternion","crossVectors","normalize","setFromRotationMatrix","move","distance","matrix","me","te","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","Error","space","Object3D","apply","Object","create","velocity","length","applyQuaternion","domElement","onMouseMove","e","self","mouseSpeedX","movementX","mozMovementX","webkitMovementX","onKeyDown","keyCode","moveLeft","moveRight","moveForward","moveBackward","moveUp","moveDown","rotateLeft","rotateRight","onKeyUp","lockChange","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","targetVelocity","mouseSpeedY","onclick","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","vectorZ","rotation","Quaternion","movementVector","setFromUnitVectors","multiplyQuaternions","lengthSq","_webglRenderer","WebGLRenderer","appendChild","_container","_space","_sceneRenderer","SceneRenderer","_getWidth","_getHeight","_scaledRenderer","ScaledRenderer","_getPixelSize","_updatePixelSize","blur","bind","clientWidth","clientHeight","parseInt","value","setPixelSize","camera","renderTarget","width","height","setSize","loadSkybox","dir","ext","files","map","file","textureCube","ImageUtils","loadTextureCube","format","RGBFormat","_aspectFix","_uniforms","uRadiusSquared","type","uThroatLength","uSkybox1","uSkybox2","uCameraPosition","uCameraOrientation","_camera","OrthographicCamera","_scene","Scene","geometry","BufferGeometry","vertices","BufferAttribute","Float32Array","addAttribute","material","RawShaderMaterial","uniforms","vertexShader","getElementById","textContent","fragmentShader","side","DoubleSide","mesh","Mesh","multiply","_renderWidth","_renderHeight","vx","vy","pixelSize","_width","_height","_pixelSize","WebGLRenderTarget","floor","minFilter","LinearFilter","magFilter","tRendered","join"],"mappings":"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","file":"dist.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar WormholeSpace   = __webpack_require__(1);\n\tvar Player          = __webpack_require__(3);\n\tvar PlayerControls  = __webpack_require__(4);\n\tvar Renderer        = __webpack_require__(5);\n\t\n\tvar container = document.querySelector('#container');\n\t\n\tvar wormholeSpace = new WormholeSpace(1.4, 5);\n\t\n\tvar renderer = new Renderer(container, wormholeSpace);\n\t\n\tvar player = new Player(wormholeSpace);\n\t\n\tvar playerX = wormholeSpace.radius * 2 + wormholeSpace.throatLength;\n\t\n\tplayer.position.set(playerX, Math.PI * 0.5, 0);\n\tplayer.rotateY(-Math.PI * 0.5);\n\t\n\tvar playerControls = new PlayerControls(player, container);\n\t\n\tvar clock = new THREE.Clock();\n\t\n\tfunction animate() {\n\t  requestAnimationFrame(animate);\n\t\n\t  var delta = clock.getDelta();\n\t  if (delta < 0.001) return;\n\t\n\t  playerControls.update(delta);\n\t\n\t  var maxX = wormholeSpace.throatLength + wormholeSpace.radius * 4;\n\t\n\t  if (player.position.x > maxX) {\n\t    player.position.x = maxX;\n\t  }\n\t  else if (player.position.x < -maxX) {\n\t    player.position.x = -maxX;\n\t  }\n\t\n\t  render();\n\t}\n\t\n\tfunction render() {\n\t  renderer.render(player);\n\t}\n\t\n\twindow.addEventListener('resize', resizeRenderer, false);\n\t\n\tfunction resizeRenderer() {\n\t  renderer.resize();\n\t}\n\t\n\tanimate();\n\t\n\tvar uiToggle = document.querySelector('[name=hide-ui]');\n\tuiToggle.addEventListener('change', toggleUI, false);\n\t\n\tfunction toggleUI() {\n\t  if (uiToggle.checked) {\n\t    document.body.classList.add('no-ui');\n\t  }\n\t  else {\n\t    document.body.classList.remove('no-ui');\n\t  }\n\t}\n\t\n\ttoggleUI();\n\t\n\tfunction removeIntroduction(event) {\n\t  // Ignore clicks on links\n\t  if (event.target.href) {\n\t    return;\n\t  }\n\t\n\t  document.querySelector('#introduction').classList.add('hidden');\n\t\n\t  // When a scrollbar is removed, a resize has to be triggered manually\n\t  resizeRenderer();\n\t\n\t  document.removeEventListener('click', removeIntroduction, false)\n\t}\n\t\n\tdocument.addEventListener('click', removeIntroduction, false);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar MathUtil = __webpack_require__(2);\n\t\n\tfunction WormholeSpace(radius, throatLength)\n\t{\n\t  this.radius = radius;\n\t  this.radiusSquared = radius * radius;\n\t  this.throatLength = throatLength;\n\t}\n\t\n\tWormholeSpace.prototype = {\n\t\n\t  // Adjust direction to spherical coordinates\n\t  adjustCartesianDirection: function(position, direction) {\n\t    var distanceToWormhole = Math.max(0, Math.abs(position.x) - this.throatLength);\n\t\n\t    var r = Math.sqrt(distanceToWormhole * distanceToWormhole + this.radiusSquared);\n\t    direction.y /= r;\n\t    direction.z /= r * Math.sin(position.y);\n\t  },\n\t\n\t  // Adjust direction to cartesian coordinates\n\t  adjustSphericalDirection: function(position, direction) {\n\t    var distanceToWormhole = Math.max(0, Math.abs(position.x) - this.throatLength);\n\t\n\t    var r = Math.sqrt(distanceToWormhole * distanceToWormhole + this.radiusSquared);\n\t    direction.y *= r;\n\t    direction.z *= r * Math.sin(position.y);\n\t  },\n\t\n\t  step: (function() {\n\t    var deltaPosition = new THREE.Vector3;\n\t    var deltaDirection = new THREE.Vector3;\n\t    var deltaTetrad = new THREE.Vector3;\n\t\n\t    var f = new THREE.Vector3;\n\t    var Dfv = new THREE.Matrix3;\n\t    var Dfx = new THREE.Matrix3;\n\t\n\t    var g = new THREE.Vector3;\n\t    var Dgv = new THREE.Matrix3;\n\t    var Dgx = new THREE.Matrix3;\n\t    var Dgt = new THREE.Matrix3;\n\t\n\t    var deltaT1 = new THREE.Vector3,\n\t        deltaT2 = new THREE.Vector3;\n\t\n\t    var lhs = new THREE.Matrix3;\n\t    var lhsInverse = new THREE.Matrix3;\n\t\n\t    return function(object, direction, delta) {\n\t      var position = object.position;\n\t      var distanceToWormhole0 = Math.max(0, Math.abs(position.x) - this.throatLength);\n\t      var radiusSquared = this.radiusSquared;\n\t\n\t      var x = position.x / Math.abs(position.x) * distanceToWormhole0,\n\t          y = position.y,\n\t          z = position.z,\n\t          dx = direction.x,\n\t          dy = direction.y,\n\t          dz = direction.z,\n\t          x2 = x * x,\n\t          y2 = y * y,\n\t          z2 = z * z,\n\t          dx2 = dx * dx,\n\t          dy2 = dy * dy,\n\t          dz2 = dz * dz,\n\t          siny = Math.sin(y),\n\t          cosy = Math.cos(y),\n\t          sin2y = Math.sin(2 * y),\n\t          cos2y = Math.cos(2 * y),\n\t          siny2 = siny * siny,\n\t          cosysiny = cosy * siny,\n\t          coty = 1 / Math.tan(y),\n\t          cscy = 1 / siny,\n\t          b2 = radiusSquared,\n\t          ib2r2 = 1 / (b2 + x * x),\n\t          ib2r22 = ib2r2 * ib2r2;\n\t\n\t      // Integrate the position and direction\n\t      f.set(\n\t          x * (dy2 + siny2 * dz2),\n\t          -2 * x * dx * dy * ib2r2 + cosysiny * dz2,\n\t          -2 * x * dx * dz * ib2r2 - 2 * coty * dy * dz\n\t      );\n\t\n\t      Dfv.set(\n\t                            0,          2 * dy * x,                  2 * dz * x * siny2,\n\t          -2 * dy * x * ib2r2, -2 * dx * x * ib2r2,                          dz * sin2y,\n\t          -2 * dz * x * ib2r2,      -2 * dz * coty, -2 * dx * x * ib2r2 - 2 * dy * coty\n\t      );\n\t\n\t      Dfx.set(\n\t                         dy2 + dz2 * siny2,           dz2 * x * sin2y, 0,\n\t          2 * dx * dy * (x2 - b2) * ib2r22,               dz2 * cos2y, 0,\n\t          2 * dx * dz * (x2 - b2) * ib2r22, 2 * dy * dz * cscy * cscy, 0\n\t      );\n\t\n\t      lhs.identity();\n\t      MathUtil.Matrix3.subtract(lhs, Dfv/*.clone()*/.multiplyScalar(delta));\n\t      MathUtil.Matrix3.subtract(lhs, Dfx/*.clone()*/.multiplyScalar(delta * delta));\n\t      MathUtil.Matrix3.getInverse(lhsInverse, lhs)\n\t\n\t      deltaDirection.copy(f).addScaledVector(direction.clone().applyMatrix3(Dfx), delta).multiplyScalar(delta);\n\t      deltaDirection.applyMatrix3(lhsInverse);\n\t\n\t      deltaPosition.copy(direction.clone().add(deltaDirection).multiplyScalar(delta));\n\t\n\t      // Integrate tetrad by using parallel transport\n\t      if (object.__tetrad) {\n\t        for (var i = 0; i < 2; i++) {\n\t          var tetrad = object.__tetrad[i];\n\t\n\t          var tx = tetrad.x,\n\t              ty = tetrad.y,\n\t              tz = tetrad.z;\n\t\n\t          g.set(\n\t              x * (dy * ty + siny2 * dz * tz),\n\t              -x * (dx * ty + tx * dy) * ib2r2 + cosysiny * dz * tz,\n\t              -x * (dx * tz + tx * dz) * ib2r2 - coty * (dy * tz + ty * dz)\n\t          );\n\t\n\t          Dgv.set(\n\t                            0,          x * ty,              x * tz * siny2,\n\t              -x * ty * ib2r2, -x * tx * ib2r2,               tz * cosysiny,\n\t              -x * tz * ib2r2,      -tz * coty, -x * tx * ib2r2 - ty * coty\n\t          );\n\t\n\t          Dgx.set(\n\t                             dy * ty + dz * tz * siny2,               dz * x * tz * sin2y, 0,\n\t              (dy * tx + dx * ty) * (x2 - b2) * ib2r22,                   dz * tz * cos2y, 0,\n\t              (dz * tx + dx * tz) * (x2 - b2) * ib2r22, (dz * ty + dy * tz) * cscy * cscy, 0\n\t          );\n\t\n\t          Dgt.set(\n\t                            0,          dy * x,              dz * x * siny2,\n\t              -dy * x * ib2r2, -dx * x * ib2r2,               dz * cosysiny,\n\t              -dz * x * ib2r2,      -dz * coty, -dx * x * ib2r2 - dy * coty\n\t          );\n\t\n\t          lhs.identity();\n\t          MathUtil.Matrix3.subtract(lhs, Dgt/*.clone()*/.multiplyScalar(delta));\n\t          MathUtil.Matrix3.getInverse(lhsInverse, lhs)\n\t\n\t          deltaT1.copy(deltaPosition).applyMatrix3(Dgx);\n\t          deltaT2.copy(deltaDirection).applyMatrix3(Dgv);\n\t\n\t          deltaTetrad.copy(g).add(deltaT1).add(deltaT2).multiplyScalar(delta).applyMatrix3(lhsInverse);\n\t\n\t          tetrad.add(deltaTetrad);\n\t        }\n\t      }\n\t\n\t      direction.add(deltaDirection);\n\t      position.add(deltaPosition);\n\t    };\n\t  })(),\n\t\n\t  quaternionToTetrad: (function() {\n\t    var rotationMatrix = new THREE.Matrix4;\n\t\n\t    return function(quaternion, tetrad) {\n\t      rotationMatrix.makeRotationFromQuaternion(quaternion);\n\t\n\t      tetrad[0].set(rotationMatrix.elements[0], rotationMatrix.elements[1], rotationMatrix.elements[2]);\n\t      tetrad[1].set(rotationMatrix.elements[4], rotationMatrix.elements[5], rotationMatrix.elements[6]);\n\t    };\n\t  })(),\n\t\n\t  tetradToQuaternion: (function() {\n\t    var rotationMatrix = new THREE.Matrix4;\n\t\n\t    return function(tetrad, quaternion) {\n\t      tetrad[2].crossVectors(tetrad[0], tetrad[1]);\n\t      //tetrad[1].crossVectors(tetrad[2], tetrad[0]);\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        tetrad[i].normalize();\n\t      }\n\t\n\t      rotationMatrix.elements[0] = tetrad[0].x;\n\t      rotationMatrix.elements[1] = tetrad[0].y;\n\t      rotationMatrix.elements[2] = tetrad[0].z;\n\t\n\t      rotationMatrix.elements[4] = tetrad[1].x;\n\t      rotationMatrix.elements[5] = tetrad[1].y;\n\t      rotationMatrix.elements[6] = tetrad[1].z;\n\t\n\t      rotationMatrix.elements[8] = tetrad[2].x;\n\t      rotationMatrix.elements[9] = tetrad[2].y;\n\t      rotationMatrix.elements[10] = tetrad[2].z;\n\t\n\t      quaternion.setFromRotationMatrix(rotationMatrix).normalize();\n\t    };\n\t  })(),\n\t\n\t  move: function(object, direction, distance)\n\t  {\n\t    this.adjustCartesianDirection(object.position, direction);\n\t\n\t    if (object.quaternion) {\n\t      if (!object.__tetrad) {\n\t        object.__tetrad = [\n\t          new THREE.Vector3,\n\t          new THREE.Vector3,\n\t          new THREE.Vector3\n\t        ];\n\t      }\n\t      this.quaternionToTetrad(object.quaternion, object.__tetrad);\n\t\n\t      this.adjustCartesianDirection(object.position, object.__tetrad[0]);\n\t      this.adjustCartesianDirection(object.position, object.__tetrad[1]);\n\t    }\n\t\n\t    this.step(object, direction, distance);\n\t\n\t    this.adjustSphericalDirection(object.position, direction);\n\t\n\t    if (object.quaternion) {\n\t      this.adjustSphericalDirection(object.position, object.__tetrad[0]);\n\t      this.adjustSphericalDirection(object.position, object.__tetrad[1]);\n\t\n\t      this.tetradToQuaternion(object.__tetrad, object.quaternion);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = WormholeSpace;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/**\n\t *  Some math functions three.js is lacking.\n\t */\n\t\n\tvar MathUtil = {\n\t  Matrix3: {\n\t    subtract: function(target, matrix) {\n\t      for (var i = 0; i < 9; i++) {\n\t        target.elements[i] -= matrix.elements[i];\n\t      }\n\t      return target;\n\t    },\n\t\n\t    getInverse: function(target, matrix) {\n\t      var me = matrix.elements;\n\t      var te = target.elements;\n\t\n\t      var a00 = me[0], a01 = me[1], a02 = me[2],\n\t          a10 = me[3], a11 = me[4], a12 = me[5],\n\t          a20 = me[6], a21 = me[7], a22 = me[8],\n\t\n\t          b01 = a22 * a11 - a12 * a21,\n\t          b11 = -a22 * a10 + a12 * a20,\n\t          b21 = a21 * a10 - a11 * a20,\n\t\n\t          // Calculate the determinant\n\t          det = a00 * b01 + a01 * b11 + a02 * b21;\n\t\n\t      if (!det) {\n\t        throw new Error(\"0 determinant\");\n\t      }\n\t\n\t      det = 1.0 / det;\n\t\n\t      te[0] = b01 * det;\n\t      te[1] = (-a22 * a01 + a02 * a21) * det;\n\t      te[2] = (a12 * a01 - a02 * a11) * det;\n\t      te[3] = b11 * det;\n\t      te[4] = (a22 * a00 - a02 * a20) * det;\n\t      te[5] = (-a12 * a00 + a02 * a10) * det;\n\t      te[6] = b21 * det;\n\t      te[7] = (-a21 * a00 + a01 * a20) * det;\n\t      te[8] = (a11 * a00 - a01 * a10) * det;\n\t\n\t      target.multiplyScalar( 1.0 / det );\n\t\n\t      return target;\n\t    },\n\t  }\n\t};\n\t\n\tmodule.exports = MathUtil;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tfunction Player(space) {\n\t  THREE.Object3D.apply(this);\n\t\n\t  this.space = space;\n\t}\n\t\n\tPlayer.prototype = Object.create(THREE.Object3D.prototype);\n\t\n\tPlayer.prototype.move = function(velocity) {\n\t  var distance = velocity.length();\n\t\n\t  velocity = velocity.clone().normalize().applyQuaternion(this.quaternion);\n\t\n\t  this.space.move(this, velocity, distance);\n\t};\n\t\n\tmodule.exports = Player;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tfunction PlayerControls(player, domElement)\n\t{\n\t  var self = this;\n\t\n\t  this.player = player;\n\t  this.domElement = domElement;\n\t\n\t  this.velocity = new THREE.Vector3;\n\t  this.targetVelocity = new THREE.Vector3;\n\t\n\t  this.moveForward = false;\n\t  this.moveBackward = false;\n\t  this.moveLeft = false;\n\t  this.moveRight = false;\n\t  this.moveUp = false;\n\t  this.moveDown = false;\n\t  this.rotateLeft = false;\n\t  this.rotateRight = false;\n\t\n\t  this.mouseSpeedX = 0;\n\t  this.mouseSpeedY = 0;\n\t\n\t  function onMouseMove(e) {\n\t    self.mouseSpeedX += 4 * (e.movementX || e.mozMovementX || e.webkitMovementX || 0);\n\t    //self.mouseSpeedY += 4 * (e.movementY || e.mozMovementY || e.webkitMovementY || 0);\n\t  }\n\t\n\t  function onKeyDown(e) {\n\t    switch (e.keyCode) {\n\t      case 65: self.moveLeft = true; break;\n\t      case 68: self.moveRight = true; break;\n\t      case 87: self.moveForward = true; break;\n\t      case 83: self.moveBackward = true; break;\n\t      case 82: self.moveUp = true; break;\n\t      case 70: self.moveDown = true; break;\n\t      case 81: self.rotateLeft = true; break;\n\t      case 69: self.rotateRight = true; break;\n\t    }\n\t  }\n\t\n\t  function onKeyUp(e) {\n\t    switch (e.keyCode) {\n\t      case 65: self.moveLeft = false; break;\n\t      case 68: self.moveRight = false; break;\n\t      case 87: self.moveForward = false; break;\n\t      case 83: self.moveBackward = false; break;\n\t      case 82: self.moveUp = false; break;\n\t      case 70: self.moveDown = false; break;\n\t      case 81: self.rotateLeft = false; break;\n\t      case 69: self.rotateRight = false; break;\n\t    }\n\t  }\n\t\n\t  domElement.onclick = function() {\n\t    domElement.requestPointerLock = domElement.requestPointerLock ||\n\t                            domElement.mozRequestPointerLock ||\n\t                            domElement.webkitRequestPointerLock;\n\t\n\t    domElement.requestPointerLock();\n\t  };\n\t\n\t  // Hook pointer lock state change events for different browsers\n\t  document.addEventListener('pointerlockchange', lockChange, false);\n\t  document.addEventListener('mozpointerlockchange', lockChange, false);\n\t  document.addEventListener('webkitpointerlockchange', lockChange, false);\n\t\n\t  function lockChange() {\n\t    if (document.pointerLockElement === domElement ||\n\t        document.mozPointerLockElement === domElement ||\n\t        document.webkitPointerLockElement === domElement) {\n\t      document.addEventListener('mousemove', onMouseMove, false);\n\t    }\n\t    else {\n\t      document.removeEventListener('mousemove', onMouseMove, false);\n\t    }\n\t  }\n\t\n\t  document.addEventListener('keydown', onKeyDown, false);\n\t  document.addEventListener('keyup', onKeyUp, false);\n\t}\n\t\n\tPlayerControls.prototype = {\n\t\n\t  update: (function() {\n\t    var vectorZ = new THREE.Vector3(0, 0, 1);\n\t    var rotation = new THREE.Quaternion();\n\t\n\t    return function(delta) {\n\t      var player = this.player;\n\t\n\t      // Update camera roll/pitch etc\n\t      this.mouseSpeedX -= 4 * this.mouseSpeedX * delta;\n\t      this.mouseSpeedY -= 4 * this.mouseSpeedY * delta;\n\t\n\t      var movementVector = new THREE.Vector3(this.mouseSpeedX * delta, -this.mouseSpeedY * delta, 100.0);\n\t      movementVector.normalize();\n\t\n\t      rotation.setFromUnitVectors(vectorZ, movementVector);\n\t\n\t      player.quaternion.multiplyQuaternions(player.quaternion, rotation);\n\t\n\t      /*if (this.rotateLeft) {\n\t        rotation.setFromAxisAngle(vectorZ, delta);\n\t        player.quaternion.multiplyQuaternions(player.quaternion, rotation);\n\t      }\n\t\n\t      if (this.rotateRight) {\n\t        rotation.setFromAxisAngle(vectorZ, -delta);\n\t        player.quaternion.multiplyQuaternions(player.quaternion, rotation);\n\t      }*/\n\t\n\t      this.velocity.set(0, 0, 0);\n\t\n\t      if (this.moveForward) {\n\t        this.velocity.add(new THREE.Vector3(0, 0, 1));\n\t      }\n\t\n\t      if (this.moveBackward) {\n\t        this.velocity.add(new THREE.Vector3(0, 0, -1));\n\t      }\n\t\n\t      if (this.moveLeft) {\n\t        this.velocity.add(new THREE.Vector3(-1, 0, 0));\n\t      }\n\t\n\t      if (this.moveRight) {\n\t        this.velocity.add(new THREE.Vector3(1, 0, 0));\n\t      }\n\t\n\t      /*if (this.moveUp) {\n\t        this.velocity.add(new THREE.Vector3(0, 1, 0));\n\t      }\n\t\n\t      if (this.moveDown) {\n\t        this.velocity.add(new THREE.Vector3(0, -1, 0));\n\t      }*/\n\t\n\t      if (this.velocity.lengthSq() > 0) {\n\t        this.velocity.normalize().multiplyScalar(delta);\n\t\n\t        this.player.move(this.velocity);\n\t      }\n\t    };\n\t  })()\n\t\n\t};\n\t\n\tmodule.exports = PlayerControls;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar SceneRenderer = __webpack_require__(6);\n\tvar ScaledRenderer = __webpack_require__(7);\n\t\n\tfunction Renderer(container, space) {\n\t  var self = this;\n\t\n\t  this._webglRenderer = new THREE.WebGLRenderer();\n\t  container.appendChild(this._webglRenderer.domElement);\n\t\n\t  this._container = container;\n\t  this._space = space;\n\t\n\t  this._sceneRenderer = new SceneRenderer(space, this._getWidth(), this._getHeight());\n\t  this._scaledRenderer = new ScaledRenderer(this._getWidth(), this._getHeight(), this._getPixelSize());\n\t\n\t  this.resize();\n\t\n\t  document.querySelector('.renderer-settings').addEventListener('change', function(event) {\n\t    this._updatePixelSize();\n\t\n\t    event.target.blur();\n\t  }.bind(this));\n\t}\n\t\n\tRenderer.prototype = {\n\t\n\t  _getWidth: function() {\n\t    return this._container.clientWidth;\n\t  },\n\t\n\t  _getHeight: function() {\n\t    return this._container.clientHeight;\n\t  },\n\t\n\t  _getPixelSize: function() {\n\t    return parseInt(document.querySelector(\"[name=resolution]:checked\").value);\n\t  },\n\t\n\t  _updatePixelSize: function() {\n\t    this._scaledRenderer.setPixelSize(this._getPixelSize());\n\t  },\n\t\n\t  render: function(camera) {\n\t    this._sceneRenderer.render(this._webglRenderer, camera, this._scaledRenderer.renderTarget);\n\t    this._scaledRenderer.render(this._webglRenderer);\n\t  },\n\t\n\t  resize: function() {\n\t    var width = this._getWidth(),\n\t        height = this._getHeight();\n\t\n\t    this._webglRenderer.setSize(width, height);\n\t\n\t    this._sceneRenderer.setSize(width, height);\n\t    this._scaledRenderer.setSize(width, height);\n\t  }\n\t};\n\t\n\tmodule.exports = Renderer;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tfunction SceneRenderer(space, width, height) {\n\t  var self = this;\n\t\n\t  // Init variables required for rendering\n\t  this._aspectFix = new THREE.Matrix4();\n\t\n\t  this._uniforms = {\n\t    uRadiusSquared: { type: \"f\", value: space.radiusSquared },\n\t    uThroatLength: { type: \"f\", value: space.throatLength },\n\t    uSkybox1: { type: \"t\", value: loadSkybox(\"textures/skybox1/\") },\n\t    uSkybox2: { type: \"t\", value: loadSkybox(\"textures/skybox2/\") },\n\t    uCameraPosition: { type: \"v3\", value: new THREE.Vector3() },\n\t    uCameraOrientation: { type: \"m4\", value: new THREE.Matrix4() },\n\t  };\n\t\n\t  // Init shader\n\t  this._camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\t  this._scene = new THREE.Scene();\n\t\n\t  var geometry = new THREE.BufferGeometry();\n\t  var vertices = new THREE.BufferAttribute(new Float32Array([\n\t    -1.0, -1.0,\n\t    -1.0, +1.0,\n\t    +1.0, +1.0,\n\t    -1.0, -1.0,\n\t    +1.0, +1.0,\n\t    +1.0, -1.0,\n\t  ]), 2);\n\t\n\t  geometry.addAttribute('position', vertices);\n\t\n\t  var material = new THREE.RawShaderMaterial({\n\t    uniforms: this._uniforms,\n\t    vertexShader: document.getElementById('vertexShader').textContent,\n\t    fragmentShader: document.getElementById('fragmentShader').textContent,\n\t    side: THREE.DoubleSide,\n\t  });\n\t\n\t  var mesh = new THREE.Mesh(geometry, material);\n\t  this._scene.add(mesh);\n\t\n\t  function loadSkybox(dir, ext)\n\t  {\n\t    ext = ext || \"jpg\";\n\t    var files = [\n\t      \"sky_pos_x\", \"sky_neg_x\",\n\t      \"sky_pos_y\", \"sky_neg_y\",\n\t      \"sky_pos_z\", \"sky_neg_z\"\n\t    ].map(function(file) {\n\t      return dir + file + \".\" + ext;\n\t    });\n\t\n\t    var textureCube = THREE.ImageUtils.loadTextureCube(files);\n\t    textureCube.format = THREE.RGBFormat;\n\t\n\t    return textureCube;\n\t  }\n\t}\n\t\n\tSceneRenderer.prototype = {\n\t\n\t  render: function(renderer, camera, renderTarget) {\n\t    this._uniforms.uCameraPosition.value.copy(camera.position);\n\t\n\t    this._uniforms.uCameraOrientation.value.makeRotationFromQuaternion(camera.quaternion);\n\t    this._uniforms.uCameraOrientation.value.multiply(this._aspectFix)\n\t\n\t    renderer.render(this._scene, this._camera, renderTarget);\n\t  },\n\t\n\t  setSize: function(width, height) {\n\t    this._renderWidth = width;\n\t    this._renderHeight = height;\n\t\n\t    var vx, vy;\n\t    if (width > height)\n\t    {\n\t      vx = width / height;\n\t      vy = 1;\n\t    }\n\t    else\n\t    {\n\t      vx = 1;\n\t      vy = height / width;\n\t    }\n\t\n\t    this._aspectFix.set(vx,  0, 0, 0,\n\t                        0, vy, 0, 0,\n\t                        0,  0, 2, 0,\n\t                        0,  0, 0, 1);\n\t  }\n\t};\n\t\n\tmodule.exports = SceneRenderer;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tfunction ScaledRenderer(width, height, pixelSize) {\n\t  this._width = width;\n\t  this._height = height;\n\t  this._pixelSize = pixelSize;\n\t\n\t  this.renderTarget = new THREE.WebGLRenderTarget(\n\t    Math.floor(width / pixelSize),\n\t    Math.floor(height / pixelSize),\n\t    {\n\t      minFilter: THREE.LinearFilter,\n\t      magFilter: THREE.LinearFilter,\n\t      format: THREE.RGBFormat\n\t    }\n\t  );\n\t\n\t  this._camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\t  this._scene = new THREE.Scene();\n\t\n\t  var geometry = new THREE.BufferGeometry();\n\t  var vertices = new THREE.BufferAttribute(new Float32Array([\n\t    -1.0, -1.0,\n\t    -1.0, +1.0,\n\t    +1.0, +1.0,\n\t    -1.0, -1.0,\n\t    +1.0, +1.0,\n\t    +1.0, -1.0,\n\t  ]), 2);\n\t\n\t  geometry.addAttribute('position', vertices);\n\t\n\t  var material = new THREE.RawShaderMaterial({\n\t    uniforms: {\n\t      tRendered: {\n\t        type: \"t\",\n\t        value: this.renderTarget\n\t      }\n\t    },\n\t\t\tvertexShader: [\n\t      \"precision highp float;\",\n\t      \"attribute vec2 position;\",\n\t      \"varying vec2 vUv;\",\n\t\t\t\t\"void main() {\",\n\t\t\t\t\t\"vUv = position * 0.5 + 0.5;\",\n\t\t\t\t\t\"gl_Position = vec4(position, 0.0, 1.0);\",\n\t\t\t\t\"}\",\n\t    ].join(\"\\n\"),\n\t\n\t\t\tfragmentShader: [\n\t      \"precision highp float;\",\n\t      \"varying vec2 vUv;\",\n\t\t\t\t\"uniform sampler2D tRendered;\",\n\t\t\t\t\"void main() {\",\n\t\t\t\t\t\"gl_FragColor = texture2D(tRendered, vUv);\",\n\t\t\t\t\"}\",\n\t    ].join(\"\\n\"),\n\t    side: THREE.DoubleSide,\n\t  });\n\t\n\t  var mesh = new THREE.Mesh(geometry, material);\n\t  this._scene.add(mesh);\n\t}\n\t\n\tScaledRenderer.prototype = {\n\t\n\t  setSize: function(width, height) {\n\t    this._width = width;\n\t    this._height = height;\n\t\n\t    this.renderTarget.setSize(\n\t      Math.floor(this._width / this._pixelSize),\n\t      Math.floor(this._height / this._pixelSize)\n\t    );\n\t  },\n\t\n\t  setPixelSize: function(pixelSize) {\n\t    this._pixelSize = pixelSize;\n\t\n\t    this.renderTarget.setSize(\n\t      Math.floor(this._width / this._pixelSize),\n\t      Math.floor(this._height / this._pixelSize)\n\t    );\n\t  },\n\t\n\t  render: function(renderer) {\n\t    renderer.render(this._scene, this._camera);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ScaledRenderer;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** dist.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 26a9bb1c8b56408a90aa\n **/","var WormholeSpace   = require(\"./wormholespace\");\nvar Player          = require(\"./player\");\nvar PlayerControls  = require(\"./playercontrols\");\nvar Renderer        = require(\"./renderer\");\n\nvar container = document.querySelector('#container');\n\nvar wormholeSpace = new WormholeSpace(1.4, 5);\n\nvar renderer = new Renderer(container, wormholeSpace);\n\nvar player = new Player(wormholeSpace);\n\nvar playerX = wormholeSpace.radius * 2 + wormholeSpace.throatLength;\n\nplayer.position.set(playerX, Math.PI * 0.5, 0);\nplayer.rotateY(-Math.PI * 0.5);\n\nvar playerControls = new PlayerControls(player, container);\n\nvar clock = new THREE.Clock();\n\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  var delta = clock.getDelta();\n  if (delta < 0.001) return;\n\n  playerControls.update(delta);\n\n  var maxX = wormholeSpace.throatLength + wormholeSpace.radius * 4;\n\n  if (player.position.x > maxX) {\n    player.position.x = maxX;\n  }\n  else if (player.position.x < -maxX) {\n    player.position.x = -maxX;\n  }\n\n  render();\n}\n\nfunction render() {\n  renderer.render(player);\n}\n\nwindow.addEventListener('resize', resizeRenderer, false);\n\nfunction resizeRenderer() {\n  renderer.resize();\n}\n\nanimate();\n\nvar uiToggle = document.querySelector('[name=hide-ui]');\nuiToggle.addEventListener('change', toggleUI, false);\n\nfunction toggleUI() {\n  if (uiToggle.checked) {\n    document.body.classList.add('no-ui');\n  }\n  else {\n    document.body.classList.remove('no-ui');\n  }\n}\n\ntoggleUI();\n\nfunction removeIntroduction(event) {\n  // Ignore clicks on links\n  if (event.target.href) {\n    return;\n  }\n\n  document.querySelector('#introduction').classList.add('hidden');\n\n  // When a scrollbar is removed, a resize has to be triggered manually\n  resizeRenderer();\n\n  document.removeEventListener('click', removeIntroduction, false)\n}\n\ndocument.addEventListener('click', removeIntroduction, false);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var MathUtil = require(\"./mathutil\");\n\nfunction WormholeSpace(radius, throatLength)\n{\n  this.radius = radius;\n  this.radiusSquared = radius * radius;\n  this.throatLength = throatLength;\n}\n\nWormholeSpace.prototype = {\n\n  // Adjust direction to spherical coordinates\n  adjustCartesianDirection: function(position, direction) {\n    var distanceToWormhole = Math.max(0, Math.abs(position.x) - this.throatLength);\n\n    var r = Math.sqrt(distanceToWormhole * distanceToWormhole + this.radiusSquared);\n    direction.y /= r;\n    direction.z /= r * Math.sin(position.y);\n  },\n\n  // Adjust direction to cartesian coordinates\n  adjustSphericalDirection: function(position, direction) {\n    var distanceToWormhole = Math.max(0, Math.abs(position.x) - this.throatLength);\n\n    var r = Math.sqrt(distanceToWormhole * distanceToWormhole + this.radiusSquared);\n    direction.y *= r;\n    direction.z *= r * Math.sin(position.y);\n  },\n\n  step: (function() {\n    var deltaPosition = new THREE.Vector3;\n    var deltaDirection = new THREE.Vector3;\n    var deltaTetrad = new THREE.Vector3;\n\n    var f = new THREE.Vector3;\n    var Dfv = new THREE.Matrix3;\n    var Dfx = new THREE.Matrix3;\n\n    var g = new THREE.Vector3;\n    var Dgv = new THREE.Matrix3;\n    var Dgx = new THREE.Matrix3;\n    var Dgt = new THREE.Matrix3;\n\n    var deltaT1 = new THREE.Vector3,\n        deltaT2 = new THREE.Vector3;\n\n    var lhs = new THREE.Matrix3;\n    var lhsInverse = new THREE.Matrix3;\n\n    return function(object, direction, delta) {\n      var position = object.position;\n      var distanceToWormhole0 = Math.max(0, Math.abs(position.x) - this.throatLength);\n      var radiusSquared = this.radiusSquared;\n\n      var x = position.x / Math.abs(position.x) * distanceToWormhole0,\n          y = position.y,\n          z = position.z,\n          dx = direction.x,\n          dy = direction.y,\n          dz = direction.z,\n          x2 = x * x,\n          y2 = y * y,\n          z2 = z * z,\n          dx2 = dx * dx,\n          dy2 = dy * dy,\n          dz2 = dz * dz,\n          siny = Math.sin(y),\n          cosy = Math.cos(y),\n          sin2y = Math.sin(2 * y),\n          cos2y = Math.cos(2 * y),\n          siny2 = siny * siny,\n          cosysiny = cosy * siny,\n          coty = 1 / Math.tan(y),\n          cscy = 1 / siny,\n          b2 = radiusSquared,\n          ib2r2 = 1 / (b2 + x * x),\n          ib2r22 = ib2r2 * ib2r2;\n\n      // Integrate the position and direction\n      f.set(\n          x * (dy2 + siny2 * dz2),\n          -2 * x * dx * dy * ib2r2 + cosysiny * dz2,\n          -2 * x * dx * dz * ib2r2 - 2 * coty * dy * dz\n      );\n\n      Dfv.set(\n                            0,          2 * dy * x,                  2 * dz * x * siny2,\n          -2 * dy * x * ib2r2, -2 * dx * x * ib2r2,                          dz * sin2y,\n          -2 * dz * x * ib2r2,      -2 * dz * coty, -2 * dx * x * ib2r2 - 2 * dy * coty\n      );\n\n      Dfx.set(\n                         dy2 + dz2 * siny2,           dz2 * x * sin2y, 0,\n          2 * dx * dy * (x2 - b2) * ib2r22,               dz2 * cos2y, 0,\n          2 * dx * dz * (x2 - b2) * ib2r22, 2 * dy * dz * cscy * cscy, 0\n      );\n\n      lhs.identity();\n      MathUtil.Matrix3.subtract(lhs, Dfv/*.clone()*/.multiplyScalar(delta));\n      MathUtil.Matrix3.subtract(lhs, Dfx/*.clone()*/.multiplyScalar(delta * delta));\n      MathUtil.Matrix3.getInverse(lhsInverse, lhs)\n\n      deltaDirection.copy(f).addScaledVector(direction.clone().applyMatrix3(Dfx), delta).multiplyScalar(delta);\n      deltaDirection.applyMatrix3(lhsInverse);\n\n      deltaPosition.copy(direction.clone().add(deltaDirection).multiplyScalar(delta));\n\n      // Integrate tetrad by using parallel transport\n      if (object.__tetrad) {\n        for (var i = 0; i < 2; i++) {\n          var tetrad = object.__tetrad[i];\n\n          var tx = tetrad.x,\n              ty = tetrad.y,\n              tz = tetrad.z;\n\n          g.set(\n              x * (dy * ty + siny2 * dz * tz),\n              -x * (dx * ty + tx * dy) * ib2r2 + cosysiny * dz * tz,\n              -x * (dx * tz + tx * dz) * ib2r2 - coty * (dy * tz + ty * dz)\n          );\n\n          Dgv.set(\n                            0,          x * ty,              x * tz * siny2,\n              -x * ty * ib2r2, -x * tx * ib2r2,               tz * cosysiny,\n              -x * tz * ib2r2,      -tz * coty, -x * tx * ib2r2 - ty * coty\n          );\n\n          Dgx.set(\n                             dy * ty + dz * tz * siny2,               dz * x * tz * sin2y, 0,\n              (dy * tx + dx * ty) * (x2 - b2) * ib2r22,                   dz * tz * cos2y, 0,\n              (dz * tx + dx * tz) * (x2 - b2) * ib2r22, (dz * ty + dy * tz) * cscy * cscy, 0\n          );\n\n          Dgt.set(\n                            0,          dy * x,              dz * x * siny2,\n              -dy * x * ib2r2, -dx * x * ib2r2,               dz * cosysiny,\n              -dz * x * ib2r2,      -dz * coty, -dx * x * ib2r2 - dy * coty\n          );\n\n          lhs.identity();\n          MathUtil.Matrix3.subtract(lhs, Dgt/*.clone()*/.multiplyScalar(delta));\n          MathUtil.Matrix3.getInverse(lhsInverse, lhs)\n\n          deltaT1.copy(deltaPosition).applyMatrix3(Dgx);\n          deltaT2.copy(deltaDirection).applyMatrix3(Dgv);\n\n          deltaTetrad.copy(g).add(deltaT1).add(deltaT2).multiplyScalar(delta).applyMatrix3(lhsInverse);\n\n          tetrad.add(deltaTetrad);\n        }\n      }\n\n      direction.add(deltaDirection);\n      position.add(deltaPosition);\n    };\n  })(),\n\n  quaternionToTetrad: (function() {\n    var rotationMatrix = new THREE.Matrix4;\n\n    return function(quaternion, tetrad) {\n      rotationMatrix.makeRotationFromQuaternion(quaternion);\n\n      tetrad[0].set(rotationMatrix.elements[0], rotationMatrix.elements[1], rotationMatrix.elements[2]);\n      tetrad[1].set(rotationMatrix.elements[4], rotationMatrix.elements[5], rotationMatrix.elements[6]);\n    };\n  })(),\n\n  tetradToQuaternion: (function() {\n    var rotationMatrix = new THREE.Matrix4;\n\n    return function(tetrad, quaternion) {\n      tetrad[2].crossVectors(tetrad[0], tetrad[1]);\n      //tetrad[1].crossVectors(tetrad[2], tetrad[0]);\n\n      for (var i = 0; i < 3; i++) {\n        tetrad[i].normalize();\n      }\n\n      rotationMatrix.elements[0] = tetrad[0].x;\n      rotationMatrix.elements[1] = tetrad[0].y;\n      rotationMatrix.elements[2] = tetrad[0].z;\n\n      rotationMatrix.elements[4] = tetrad[1].x;\n      rotationMatrix.elements[5] = tetrad[1].y;\n      rotationMatrix.elements[6] = tetrad[1].z;\n\n      rotationMatrix.elements[8] = tetrad[2].x;\n      rotationMatrix.elements[9] = tetrad[2].y;\n      rotationMatrix.elements[10] = tetrad[2].z;\n\n      quaternion.setFromRotationMatrix(rotationMatrix).normalize();\n    };\n  })(),\n\n  move: function(object, direction, distance)\n  {\n    this.adjustCartesianDirection(object.position, direction);\n\n    if (object.quaternion) {\n      if (!object.__tetrad) {\n        object.__tetrad = [\n          new THREE.Vector3,\n          new THREE.Vector3,\n          new THREE.Vector3\n        ];\n      }\n      this.quaternionToTetrad(object.quaternion, object.__tetrad);\n\n      this.adjustCartesianDirection(object.position, object.__tetrad[0]);\n      this.adjustCartesianDirection(object.position, object.__tetrad[1]);\n    }\n\n    this.step(object, direction, distance);\n\n    this.adjustSphericalDirection(object.position, direction);\n\n    if (object.quaternion) {\n      this.adjustSphericalDirection(object.position, object.__tetrad[0]);\n      this.adjustSphericalDirection(object.position, object.__tetrad[1]);\n\n      this.tetradToQuaternion(object.__tetrad, object.quaternion);\n    }\n  }\n\n};\n\nmodule.exports = WormholeSpace;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/wormholespace.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n *  Some math functions three.js is lacking.\n */\n\nvar MathUtil = {\n  Matrix3: {\n    subtract: function(target, matrix) {\n      for (var i = 0; i < 9; i++) {\n        target.elements[i] -= matrix.elements[i];\n      }\n      return target;\n    },\n\n    getInverse: function(target, matrix) {\n      var me = matrix.elements;\n      var te = target.elements;\n\n      var a00 = me[0], a01 = me[1], a02 = me[2],\n          a10 = me[3], a11 = me[4], a12 = me[5],\n          a20 = me[6], a21 = me[7], a22 = me[8],\n\n          b01 = a22 * a11 - a12 * a21,\n          b11 = -a22 * a10 + a12 * a20,\n          b21 = a21 * a10 - a11 * a20,\n\n          // Calculate the determinant\n          det = a00 * b01 + a01 * b11 + a02 * b21;\n\n      if (!det) {\n        throw new Error(\"0 determinant\");\n      }\n\n      det = 1.0 / det;\n\n      te[0] = b01 * det;\n      te[1] = (-a22 * a01 + a02 * a21) * det;\n      te[2] = (a12 * a01 - a02 * a11) * det;\n      te[3] = b11 * det;\n      te[4] = (a22 * a00 - a02 * a20) * det;\n      te[5] = (-a12 * a00 + a02 * a10) * det;\n      te[6] = b21 * det;\n      te[7] = (-a21 * a00 + a01 * a20) * det;\n      te[8] = (a11 * a00 - a01 * a10) * det;\n\n      target.multiplyScalar( 1.0 / det );\n\n      return target;\n    },\n  }\n};\n\nmodule.exports = MathUtil;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/mathutil.js\n ** module id = 2\n ** module chunks = 0\n **/","function Player(space) {\n  THREE.Object3D.apply(this);\n\n  this.space = space;\n}\n\nPlayer.prototype = Object.create(THREE.Object3D.prototype);\n\nPlayer.prototype.move = function(velocity) {\n  var distance = velocity.length();\n\n  velocity = velocity.clone().normalize().applyQuaternion(this.quaternion);\n\n  this.space.move(this, velocity, distance);\n};\n\nmodule.exports = Player;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/player.js\n ** module id = 3\n ** module chunks = 0\n **/","function PlayerControls(player, domElement)\n{\n  var self = this;\n\n  this.player = player;\n  this.domElement = domElement;\n\n  this.velocity = new THREE.Vector3;\n  this.targetVelocity = new THREE.Vector3;\n\n  this.moveForward = false;\n  this.moveBackward = false;\n  this.moveLeft = false;\n  this.moveRight = false;\n  this.moveUp = false;\n  this.moveDown = false;\n  this.rotateLeft = false;\n  this.rotateRight = false;\n\n  this.mouseSpeedX = 0;\n  this.mouseSpeedY = 0;\n\n  function onMouseMove(e) {\n    self.mouseSpeedX += 4 * (e.movementX || e.mozMovementX || e.webkitMovementX || 0);\n    //self.mouseSpeedY += 4 * (e.movementY || e.mozMovementY || e.webkitMovementY || 0);\n  }\n\n  function onKeyDown(e) {\n    switch (e.keyCode) {\n      case 65: self.moveLeft = true; break;\n      case 68: self.moveRight = true; break;\n      case 87: self.moveForward = true; break;\n      case 83: self.moveBackward = true; break;\n      case 82: self.moveUp = true; break;\n      case 70: self.moveDown = true; break;\n      case 81: self.rotateLeft = true; break;\n      case 69: self.rotateRight = true; break;\n    }\n  }\n\n  function onKeyUp(e) {\n    switch (e.keyCode) {\n      case 65: self.moveLeft = false; break;\n      case 68: self.moveRight = false; break;\n      case 87: self.moveForward = false; break;\n      case 83: self.moveBackward = false; break;\n      case 82: self.moveUp = false; break;\n      case 70: self.moveDown = false; break;\n      case 81: self.rotateLeft = false; break;\n      case 69: self.rotateRight = false; break;\n    }\n  }\n\n  domElement.onclick = function() {\n    domElement.requestPointerLock = domElement.requestPointerLock ||\n                            domElement.mozRequestPointerLock ||\n                            domElement.webkitRequestPointerLock;\n\n    domElement.requestPointerLock();\n  };\n\n  // Hook pointer lock state change events for different browsers\n  document.addEventListener('pointerlockchange', lockChange, false);\n  document.addEventListener('mozpointerlockchange', lockChange, false);\n  document.addEventListener('webkitpointerlockchange', lockChange, false);\n\n  function lockChange() {\n    if (document.pointerLockElement === domElement ||\n        document.mozPointerLockElement === domElement ||\n        document.webkitPointerLockElement === domElement) {\n      document.addEventListener('mousemove', onMouseMove, false);\n    }\n    else {\n      document.removeEventListener('mousemove', onMouseMove, false);\n    }\n  }\n\n  document.addEventListener('keydown', onKeyDown, false);\n  document.addEventListener('keyup', onKeyUp, false);\n}\n\nPlayerControls.prototype = {\n\n  update: (function() {\n    var vectorZ = new THREE.Vector3(0, 0, 1);\n    var rotation = new THREE.Quaternion();\n\n    return function(delta) {\n      var player = this.player;\n\n      // Update camera roll/pitch etc\n      this.mouseSpeedX -= 4 * this.mouseSpeedX * delta;\n      this.mouseSpeedY -= 4 * this.mouseSpeedY * delta;\n\n      var movementVector = new THREE.Vector3(this.mouseSpeedX * delta, -this.mouseSpeedY * delta, 100.0);\n      movementVector.normalize();\n\n      rotation.setFromUnitVectors(vectorZ, movementVector);\n\n      player.quaternion.multiplyQuaternions(player.quaternion, rotation);\n\n      /*if (this.rotateLeft) {\n        rotation.setFromAxisAngle(vectorZ, delta);\n        player.quaternion.multiplyQuaternions(player.quaternion, rotation);\n      }\n\n      if (this.rotateRight) {\n        rotation.setFromAxisAngle(vectorZ, -delta);\n        player.quaternion.multiplyQuaternions(player.quaternion, rotation);\n      }*/\n\n      this.velocity.set(0, 0, 0);\n\n      if (this.moveForward) {\n        this.velocity.add(new THREE.Vector3(0, 0, 1));\n      }\n\n      if (this.moveBackward) {\n        this.velocity.add(new THREE.Vector3(0, 0, -1));\n      }\n\n      if (this.moveLeft) {\n        this.velocity.add(new THREE.Vector3(-1, 0, 0));\n      }\n\n      if (this.moveRight) {\n        this.velocity.add(new THREE.Vector3(1, 0, 0));\n      }\n\n      /*if (this.moveUp) {\n        this.velocity.add(new THREE.Vector3(0, 1, 0));\n      }\n\n      if (this.moveDown) {\n        this.velocity.add(new THREE.Vector3(0, -1, 0));\n      }*/\n\n      if (this.velocity.lengthSq() > 0) {\n        this.velocity.normalize().multiplyScalar(delta);\n\n        this.player.move(this.velocity);\n      }\n    };\n  })()\n\n};\n\nmodule.exports = PlayerControls;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/playercontrols.js\n ** module id = 4\n ** module chunks = 0\n **/","var SceneRenderer = require(\"./scenerenderer\");\nvar ScaledRenderer = require(\"./scaledrenderer\");\n\nfunction Renderer(container, space) {\n  var self = this;\n\n  this._webglRenderer = new THREE.WebGLRenderer();\n  container.appendChild(this._webglRenderer.domElement);\n\n  this._container = container;\n  this._space = space;\n\n  this._sceneRenderer = new SceneRenderer(space, this._getWidth(), this._getHeight());\n  this._scaledRenderer = new ScaledRenderer(this._getWidth(), this._getHeight(), this._getPixelSize());\n\n  this.resize();\n\n  document.querySelector('.renderer-settings').addEventListener('change', function(event) {\n    this._updatePixelSize();\n\n    event.target.blur();\n  }.bind(this));\n}\n\nRenderer.prototype = {\n\n  _getWidth: function() {\n    return this._container.clientWidth;\n  },\n\n  _getHeight: function() {\n    return this._container.clientHeight;\n  },\n\n  _getPixelSize: function() {\n    return parseInt(document.querySelector(\"[name=resolution]:checked\").value);\n  },\n\n  _updatePixelSize: function() {\n    this._scaledRenderer.setPixelSize(this._getPixelSize());\n  },\n\n  render: function(camera) {\n    this._sceneRenderer.render(this._webglRenderer, camera, this._scaledRenderer.renderTarget);\n    this._scaledRenderer.render(this._webglRenderer);\n  },\n\n  resize: function() {\n    var width = this._getWidth(),\n        height = this._getHeight();\n\n    this._webglRenderer.setSize(width, height);\n\n    this._sceneRenderer.setSize(width, height);\n    this._scaledRenderer.setSize(width, height);\n  }\n};\n\nmodule.exports = Renderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/renderer.js\n ** module id = 5\n ** module chunks = 0\n **/","function SceneRenderer(space, width, height) {\n  var self = this;\n\n  // Init variables required for rendering\n  this._aspectFix = new THREE.Matrix4();\n\n  this._uniforms = {\n    uRadiusSquared: { type: \"f\", value: space.radiusSquared },\n    uThroatLength: { type: \"f\", value: space.throatLength },\n    uSkybox1: { type: \"t\", value: loadSkybox(\"textures/skybox1/\") },\n    uSkybox2: { type: \"t\", value: loadSkybox(\"textures/skybox2/\") },\n    uCameraPosition: { type: \"v3\", value: new THREE.Vector3() },\n    uCameraOrientation: { type: \"m4\", value: new THREE.Matrix4() },\n  };\n\n  // Init shader\n  this._camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this._scene = new THREE.Scene();\n\n  var geometry = new THREE.BufferGeometry();\n  var vertices = new THREE.BufferAttribute(new Float32Array([\n    -1.0, -1.0,\n    -1.0, +1.0,\n    +1.0, +1.0,\n    -1.0, -1.0,\n    +1.0, +1.0,\n    +1.0, -1.0,\n  ]), 2);\n\n  geometry.addAttribute('position', vertices);\n\n  var material = new THREE.RawShaderMaterial({\n    uniforms: this._uniforms,\n    vertexShader: document.getElementById('vertexShader').textContent,\n    fragmentShader: document.getElementById('fragmentShader').textContent,\n    side: THREE.DoubleSide,\n  });\n\n  var mesh = new THREE.Mesh(geometry, material);\n  this._scene.add(mesh);\n\n  function loadSkybox(dir, ext)\n  {\n    ext = ext || \"jpg\";\n    var files = [\n      \"sky_pos_x\", \"sky_neg_x\",\n      \"sky_pos_y\", \"sky_neg_y\",\n      \"sky_pos_z\", \"sky_neg_z\"\n    ].map(function(file) {\n      return dir + file + \".\" + ext;\n    });\n\n    var textureCube = THREE.ImageUtils.loadTextureCube(files);\n    textureCube.format = THREE.RGBFormat;\n\n    return textureCube;\n  }\n}\n\nSceneRenderer.prototype = {\n\n  render: function(renderer, camera, renderTarget) {\n    this._uniforms.uCameraPosition.value.copy(camera.position);\n\n    this._uniforms.uCameraOrientation.value.makeRotationFromQuaternion(camera.quaternion);\n    this._uniforms.uCameraOrientation.value.multiply(this._aspectFix)\n\n    renderer.render(this._scene, this._camera, renderTarget);\n  },\n\n  setSize: function(width, height) {\n    this._renderWidth = width;\n    this._renderHeight = height;\n\n    var vx, vy;\n    if (width > height)\n    {\n      vx = width / height;\n      vy = 1;\n    }\n    else\n    {\n      vx = 1;\n      vy = height / width;\n    }\n\n    this._aspectFix.set(vx,  0, 0, 0,\n                        0, vy, 0, 0,\n                        0,  0, 2, 0,\n                        0,  0, 0, 1);\n  }\n};\n\nmodule.exports = SceneRenderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/scenerenderer.js\n ** module id = 6\n ** module chunks = 0\n **/","function ScaledRenderer(width, height, pixelSize) {\n  this._width = width;\n  this._height = height;\n  this._pixelSize = pixelSize;\n\n  this.renderTarget = new THREE.WebGLRenderTarget(\n    Math.floor(width / pixelSize),\n    Math.floor(height / pixelSize),\n    {\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      format: THREE.RGBFormat\n    }\n  );\n\n  this._camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this._scene = new THREE.Scene();\n\n  var geometry = new THREE.BufferGeometry();\n  var vertices = new THREE.BufferAttribute(new Float32Array([\n    -1.0, -1.0,\n    -1.0, +1.0,\n    +1.0, +1.0,\n    -1.0, -1.0,\n    +1.0, +1.0,\n    +1.0, -1.0,\n  ]), 2);\n\n  geometry.addAttribute('position', vertices);\n\n  var material = new THREE.RawShaderMaterial({\n    uniforms: {\n      tRendered: {\n        type: \"t\",\n        value: this.renderTarget\n      }\n    },\n\t\tvertexShader: [\n      \"precision highp float;\",\n      \"attribute vec2 position;\",\n      \"varying vec2 vUv;\",\n\t\t\t\"void main() {\",\n\t\t\t\t\"vUv = position * 0.5 + 0.5;\",\n\t\t\t\t\"gl_Position = vec4(position, 0.0, 1.0);\",\n\t\t\t\"}\",\n    ].join(\"\\n\"),\n\n\t\tfragmentShader: [\n      \"precision highp float;\",\n      \"varying vec2 vUv;\",\n\t\t\t\"uniform sampler2D tRendered;\",\n\t\t\t\"void main() {\",\n\t\t\t\t\"gl_FragColor = texture2D(tRendered, vUv);\",\n\t\t\t\"}\",\n    ].join(\"\\n\"),\n    side: THREE.DoubleSide,\n  });\n\n  var mesh = new THREE.Mesh(geometry, material);\n  this._scene.add(mesh);\n}\n\nScaledRenderer.prototype = {\n\n  setSize: function(width, height) {\n    this._width = width;\n    this._height = height;\n\n    this.renderTarget.setSize(\n      Math.floor(this._width / this._pixelSize),\n      Math.floor(this._height / this._pixelSize)\n    );\n  },\n\n  setPixelSize: function(pixelSize) {\n    this._pixelSize = pixelSize;\n\n    this.renderTarget.setSize(\n      Math.floor(this._width / this._pixelSize),\n      Math.floor(this._height / this._pixelSize)\n    );\n  },\n\n  render: function(renderer) {\n    renderer.render(this._scene, this._camera);\n  }\n\n};\n\nmodule.exports = ScaledRenderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/scaledrenderer.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}